set nocompatible       " Don't care about vi compat

" Setup Vundle to manage my bundles
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'christoomey/vim-sort-motion'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-fugitive'
Plugin 'Raimondi/delimitMate'
Plugin 'SirVer/ultisnips'
Plugin 'airblade/vim-gitgutter'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'chriskempson/base16-vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'davidhalter/jedi-vim'
Plugin 'dhruvasagar/vim-table-mode'
Plugin 'ervandew/supertab'
Plugin 'fatih/vim-go'
Plugin 'honza/vim-snippets'
Plugin 'jpalardy/vim-slime'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'mbbill/undotree'
Plugin 'mileszs/ack.vim'
Plugin 'nvie/vim-flake8'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'w0rp/ale'
Plugin 'junegunn/goyo.vim'

filetype plugin indent on " required
syntax on

inoremap jk <Esc>

noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>

noremap <BS> <nop>
noremap <Del> <nop>

inoremap <Up> <nop>
inoremap <Down> <nop>
inoremap <Left> <nop>
inoremap <Right> <nop>
inoremap <Esc> <nop>
inoremap <Del> <nop>
let mapleader=","
noremap \ ,

noremap <leader>a :Ack
nnoremap <leader>i mmgg=G`m<CR>
nnoremap <leader>w :FixWhitespace<CR>
nnoremap <leader>u :UndotreeToggle<CR>
nnoremap <leader>f :ALEFix<CR>

set encoding=utf-8
set gdefault
set autoindent
set autowrite "go
set showcmd
set nowrap
set nrformats-=octal
set ttimeout
set ttimeoutlen=100
set ruler
set wildmenu
set expandtab
set backspace=indent,eol,start
set scrolloff=4
set secure
set lazyredraw
set complete-=i
set smarttab
set autoread
set autochdir
set cursorline
set showmatch
set relativenumber
set number
set splitbelow
set splitright
set clipboard=unnamed
syntax enable

" better search
set incsearch                   " incremental searching
set hlsearch                    " highlight matches
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter
noremap <leader><space> :nohlsearch<CR> " for removing search highlight


let g:ale_lint_on_text_changed = 'always'
let g:ale_linters = {
\   'python': ['mypy', 'pylint'],
\}

let g:ale_fixers = {
\   'python': ['yapf'],
\}

let g:ale_sign_column_always = 1

" Slime
let g:slime_target = "tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
let g:slime_python_ipython = 1
let g:slime_default_config = {"socket_name": "default", "target_pane": "%1"}

" CtrlP settings
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 'rw'


if executable('rg')
  set grepprg=rg\ --color=never
  let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
  let g:ctrlp_use_caching = 0
endif
set wildignore+=*/.git/*,*/tmp/*,*.swp

let g:SuperTabDefaultCompletionType = 'context'
let g:SuperTabClosePreviewOnPopupClose = 1
let g:ackprg = 'ag --vimgrep'
let g:jedi#popup_on_dot = 0
let python_highlight_all = 1

au BufNewFile,BufRead *.py,*.m
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=119 |
    \ set expandtab |
    \ set fileformat=unix |
    \ set colorcolumn=120 |
    \ highlight ColorColumn ctermbg=8

au FileType python nnoremap <leader>i yyP^Cimport ipdb; ipdb.set_trace()<Esc>

" Golang
au BufNewFile,BufRead *go
        \ set tabstop=4 |
        \ set shiftwidth=4

au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>d <Plug>(go-info)
let g:go_metalinter_autosave = 1

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

au BufNewFile,BufRead *.rb,*.js,*.html,*.css,*.sh,*.zsh,*.yml
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" Colors
let base16colorspace=256
colorscheme base16-default-dark

" popup colors
if has ('gui_running')
    highlight Pmenu guibg=#cccccc gui=bold
endif
set t_Co=256
set background=dark

" better display for :set list
if &listchars ==# 'eol:$'
  set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif

set laststatus=2
" For powerline
let g:airline_powerline_fonts = 1
let g:airline#extensions#ale#enabled = 1
set guifont=Inconsolata\ for\ Powerline:h15

" Allow bracketed paste mode.
if &term =~ "xterm.*"
    let &t_ti = &t_ti . "\e[?2004h"
    let &t_te = "\e[?2004l" . &t_te
    function XTermPasteBegin(ret)
        set pastetoggle=<Esc>[201~
        set paste
        return a:ret
    endfunction
    map <expr> <Esc>[200~ XTermPasteBegin("i")
    imap <expr> <Esc>[200~ XTermPasteBegin("")
    vmap <expr> <Esc>[200~ XTermPasteBegin("c")
    cmap <Esc>[200~ <nop>
    cmap <Esc>[201~ <nop>
endif

" Put all the swap files in the same place
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//
